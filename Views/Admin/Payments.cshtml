@model IEnumerable<Payment>
@{
    ViewData["Title"] = "Payment Management";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header">
                    <h4 class="card-title mb-0">
                        <i class="fa fa-credit-card"></i> Payment Management
                    </h4>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-hover">
                            <thead>
                                <tr>
                                    <th>Payment ID</th>
                                    <th>Booking</th>
                                    <th>Customer</th>
                                    <th>Room</th>
                                    <th>Amount</th>
                                    <th>Payment Date</th>
                                    <th>Method</th>
                                    <th>Status</th>
                                    <th>Transaction ID</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var payment in Model)
                                {
                                    <tr>
                                        <td>
                                            <strong>#@payment.Id</strong>
                                        </td>
                                        <td>
                                            <a asp-action="BookingDetails" asp-route-id="@payment.BookingId" class="text-decoration-none">
                                                <strong>Booking #@payment.BookingId</strong>
                                            </a>
                                        </td>
                                        <td>
                                            <strong>@payment.Booking.User.FullName</strong>
                                            <br>
                                            <small class="text-muted">@payment.Booking.User.Email</small>
                                        </td>
                                        <td>
                                            <span class="badge bg-info">@payment.Booking.Room.RoomNumber</span>
                                            <br>
                                            <small class="text-muted">@payment.Booking.Room.Type</small>
                                        </td>
                                        <td>
                                            <strong class="text-success">$@payment.Amount.ToString("F2")</strong>
                                        </td>
                                        <td>
                                            @payment.PaymentDate.ToString("MMM dd, yyyy")
                                            <br>
                                            <small class="text-muted">@payment.PaymentDate.ToString("HH:mm")</small>
                                        </td>
                                        <td>
                                            @switch (payment.PaymentMethod?.ToLower())
                                            {
                                                case "credit_card":
                                                    <span class="badge bg-primary">
                                                        <i class="fa fa-credit-card"></i> Credit Card
                                                    </span>
                                                    break;
                                                case "debit_card":
                                                    <span class="badge bg-info">
                                                        <i class="fa fa-credit-card"></i> Debit Card
                                                    </span>
                                                    break;
                                                case "paypal":
                                                    <span class="badge bg-warning">
                                                        <i class="fa fa-paypal"></i> PayPal
                                                    </span>
                                                    break;
                                                case "bank_transfer":
                                                    <span class="badge bg-secondary">
                                                        <i class="fa fa-university"></i> Bank Transfer
                                                    </span>
                                                    break;
                                                default:
                                                    <span class="badge bg-light text-dark">@payment.PaymentMethod</span>
                                                    break;
                                            }
                                        </td>
                                        <td>
                                            @switch (payment.Status?.ToLower())
                                            {
                                                case "completed":
                                                    <span class="badge bg-success">
                                                        <i class="fa fa-check"></i> Completed
                                                    </span>
                                                    break;
                                                case "pending":
                                                    <span class="badge bg-warning">
                                                        <i class="fa fa-clock"></i> Pending
                                                    </span>
                                                    break;
                                                case "failed":
                                                    <span class="badge bg-danger">
                                                        <i class="fa fa-times"></i> Failed
                                                    </span>
                                                    break;
                                                case "refunded":
                                                    <span class="badge bg-info">
                                                        <i class="fa fa-undo"></i> Refunded
                                                    </span>
                                                    break;
                                                default:
                                                    <span class="badge bg-secondary">@payment.Status</span>
                                                    break;
                                            }
                                        </td>
                                        <td>
                                            @if (!string.IsNullOrEmpty(payment.TransactionId))
                                            {
                                                <code>@payment.TransactionId</code>
                                            }
                                            else
                                            {
                                                <span class="text-muted">-</span>
                                            }
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>

                    @if (!Model.Any())
                    {
                        <div class="text-center py-4">
                            <i class="fa fa-credit-card fa-3x text-muted mb-3"></i>
                            <h5 class="text-muted">No payments found</h5>
                            <p class="text-muted">No payment records are available in the system.</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Summary Statistics -->
<div class="row mt-4">
    <div class="col-md-3">
        <div class="card bg-success text-white">
            <div class="card-body">
                <div class="d-flex align-items-center">
                    <div class="flex-grow-1">
                        <h5 class="card-title">Total Revenue</h5>
                        <h3>${@Model.Where(p => p.Status == "Completed").Sum(p => p.Amount).ToString("F2")}</h3>
                    </div>
                    <div class="flex-shrink-0">
                        <i class="fa fa-dollar-sign fa-2x opacity-75"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-primary text-white">
            <div class="card-body">
                <div class="d-flex align-items-center">
                    <div class="flex-grow-1">
                        <h5 class="card-title">Completed Payments</h5>
                        <h3>@Model.Count(p => p.Status == "Completed")</h3>
                    </div>
                    <div class="flex-shrink-0">
                        <i class="fa fa-check-circle fa-2x opacity-75"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-warning text-white">
            <div class="card-body">
                <div class="d-flex align-items-center">
                    <div class="flex-grow-1">
                        <h5 class="card-title">Pending Payments</h5>
                        <h3>@Model.Count(p => p.Status == "Pending")</h3>
                    </div>
                    <div class="flex-shrink-0">
                        <i class="fa fa-clock fa-2x opacity-75"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-danger text-white">
            <div class="card-body">
                <div class="d-flex align-items-center">
                    <div class="flex-grow-1">
                        <h5 class="card-title">Failed Payments</h5>
                        <h3>@Model.Count(p => p.Status == "Failed")</h3>
                    </div>
                    <div class="flex-shrink-0">
                        <i class="fa fa-times-circle fa-2x opacity-75"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
